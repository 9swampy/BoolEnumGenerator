name: Publish NuGet Packages

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - develop
      - release/**
      - hotfix/**
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0
          fetch-tags: true

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.2.1
        with:
          versionSpec: '6.x'

      - name: Run GitVersion and output raw JSON
        run: dotnet-gitversion --roll-forward Major /home/runner/work/BoolEnumGenerator/BoolEnumGenerator /output json /config GitVersion.yml > gitversion.json

      - name: Fix GitVersion JSON placeholders
        run: |
          sed -i 's/{BranchName}/xxBranchNamexx/g' gitversion.json
          BRANCH_NAME=$(jq -r '.EscapedBranchName' gitversion.json)
          sed -i "s|xxBranchNamexx|$BRANCH_NAME|g" gitversion.json
          cat gitversion.json

      - name: Parse version for packaging
        id: parse_nuget_version
        run: |
          FULL_SEMVER=$(jq -r '.FullSemVer' gitversion.json)
          CLEAN_SEMVER=${FULL_SEMVER//+/-}
          echo "FULL_SEMVER=$FULL_SEMVER" >> $GITHUB_ENV
          echo "NUGET_VERSION=$CLEAN_SEMVER" >> $GITHUB_ENV
          echo "NUGET_VERSION=$CLEAN_SEMVER" >> $GITHUB_OUTPUT

      - name: Ensure local nupkgs directory exists
        run: mkdir -p ./.nupkgs

      - name: Restore BoolParameterGenerator.Shared dependencies
        run: dotnet restore BoolParameterGenerator.Shared/BoolParameterGenerator.Shared.csproj

      - name: Build BoolParameterGenerator.Shared
        run: dotnet build BoolParameterGenerator.Shared/BoolParameterGenerator.Shared.csproj --configuration Release --no-restore /p:GeneratePackageOnBuild=false

      - name: Pack BoolParameterGenerator.Shared
        run: dotnet pack BoolParameterGenerator.Shared/BoolParameterGenerator.Shared.csproj --configuration Release --no-build --output ./.nupkgs /p:PackageVersion=${{ steps.parse_nuget_version.outputs.NUGET_VERSION }}

      - name: Restore BoolParameterGenerator dependencies
        run: dotnet restore BoolParameterGenerator/BoolParameterGenerator.csproj /p:ParameterNugetVersion=${{ steps.parse_nuget_version.outputs.NUGET_VERSION }}

      - name: Build BoolParameterGenerator
        run: dotnet build BoolParameterGenerator/BoolParameterGenerator.csproj --configuration Release --no-restore /p:GeneratePackageOnBuild=false

      - name: Pack BoolParameterGenerator
        run: dotnet pack BoolParameterGenerator/BoolParameterGenerator.csproj --configuration Release --no-build --output ./.nupkgs /p:PackageVersion=${{ steps.parse_nuget_version.outputs.NUGET_VERSION }}

      - name: Publish to GitHub NuGet
        #if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/heads/hotfix/') || github.ref == 'refs/heads/develop'
        run: dotnet nuget push ./.nupkgs/*.nupkg --api-key ${{ secrets.PUBLISH_TO_GITHUB_PACKAGES }} --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" --skip-duplicate

      - name: Tag commit if NuGet push was successful
        #if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/heads/hotfix/') || github.ref == 'refs/heads/develop'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git tag v${{ steps.parse_nuget_version.outputs.NUGET_VERSION }}
          git push origin v${{ steps.parse_nuget_version.outputs.NUGET_VERSION }}
